apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "k8s-cluster-logging.fullname" . }}
  labels:
    k8s-app: fluentd
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    helm.sh/chart: {{ include "k8s-cluster-logging.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      k8s-app: fluentd
      kubernetes.io/cluster-service: "true"
      app.kubernetes.io/name: {{ include "k8s-cluster-logging.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: fluentd
        kubernetes.io/cluster-service: "true"
        app.kubernetes.io/name: {{ include "k8s-cluster-logging.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      # This annotation ensures that fluentd does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      #dnsPolicy: Default
      serviceAccountName: {{ include "k8s-cluster-logging.fullname" . }}
      containers:
      - name: fluentd
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        # If fluentd consumes its own logs, the following situation may happen:
        # fluentd fails to send a chunk to the server => writes it to the log =>
        # tries to send this message to the server => fails to send a chunk and so on.
        # Writing to a file, which is not exported to the back-end prevents it.
        # It also allows to increase the fluentd verbosity by default.
        - name: FLUENTD_OPT
          value: --no-supervisor -o /var/log/fluentd.log --log-rotate-age 5 --log-rotate-size 104857600
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          {{- toYaml .Values.resources | trim | nindent 10 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /fluentd/etc/config.d
        {{- if eq .Values.logSink.type "gcp" }}
        - name: gcp-service-account
          mountPath: /etc/google/auth/application_default_credentials.json
          subPath: application_default_credentials.json
        {{- end }}
        livenessProbe:
          httpGet:
            path: /fluentd.pod.healthcheck?json=%7B%22log%22%3A+%22health+check%22%7D
            port: 9880
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /fluentd.pod.healthcheck?json=%7B%22log%22%3A+%22health+check%22%7D
            port: 9880
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
        configMap:
          name: {{ include "k8s-cluster-logging.fullname" . }}
      {{- if eq .Values.logSink.type "gcp" }}
      - name: "gcp-service-account"
        secret:
          {{- if .Values.logSink.gcpServiceAccountSecret.enabled }}
          secretName: {{ .Values.logSink.gcpServiceAccountSecret.name | quote }}
          items:
            - key: {{ .Values.logSink.gcpServiceAccountSecret.key | quote }}
              path: application_default_credentials.json
          {{- else }}
          secretName: {{ include "k8s-cluster-logging.fullname" . }}
          items:
            - key: application_default_credentials.json
              path: application_default_credentials.json
          {{- end }}
      {{- end }}
