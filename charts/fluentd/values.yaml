# Default values for fluentd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# will be ignored is autoscaling.enabled is set
replicaCount: 1

image:
  repository: railsonservices/fluentd
  tag: latest
  pullPolicy: IfNotPresent

# extra labels for the created resources
labels: {}

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/port: "24231"

service:
  type: ClusterIP
  annotations: {}
  ports:
    - name: "tcp-input"
      protocol: TCP
      containerPort: 24224
    - name: "http-input"
      protocol: TCP
      containerPort: 9880

metrics:
  enabled: false
  service:
    port: 24231

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  enabled: false
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  # annotations: {}
  accessMode: ReadWriteOnce
  size: 10Gi

nodeSelector: {}

tolerations: []

affinity: {}

# Enable autoscaling using HorizontalPodAutoscaler
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60

# map of fluentd configs to mount into fluentd
configMaps:
  general.conf: |
    # Prevent fluentd from handling records containing its own logs. Otherwise
    # it can lead to an infinite loop, when error in sending one message generates
    # another message which also fails to be sent and so on.
    <match fluentd.**>
      @type null
    </match>
  forward-input.conf: |
    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>
  http-input.conf: |
    <source>
      @type http
      port 9880
      bind 0.0.0.0
      body_size_limit 32m
      keepalive_timeout 10s
    </source>
  # the persistence volume is mounted at /var/log/fluentd
  system.conf: |-
    <system>
      worker 2
      root_dir /var/log/fluentd
    </system>

livenessProbe:
  httpGet:
    # Use percent encoding for query param.
    # The value is {"log": "health check"}.
    # the endpoint itself results in a new fluentd
    # tag 'fluentd.pod-healthcheck'
    path: /fluentd.pod.healthcheck?json=%7B%22log%22%3A+%22health+check%22%7D
    port: 9880
  initialDelaySeconds: 5
  timeoutSeconds: 1

# Consider to set higher value when using in conjuction with autoscaling
# Full description about this field: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#pod-v1-core
terminationGracePeriodSeconds: 30
